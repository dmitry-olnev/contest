-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


ALTER TABLE IF EXISTS public."Bookings" DROP CONSTRAINT IF EXISTS "Bookings_showtime_id_fkey";

ALTER TABLE IF EXISTS public."Bookings" DROP CONSTRAINT IF EXISTS "Bookings_user_id_fkey";

ALTER TABLE IF EXISTS public."Seats" DROP CONSTRAINT IF EXISTS "Seats_hall_id_fkey";

ALTER TABLE IF EXISTS public."Showtimes" DROP CONSTRAINT IF EXISTS "Showtimes_hall_id_fkey";

ALTER TABLE IF EXISTS public."Showtimes" DROP CONSTRAINT IF EXISTS "Showtimes_movie_id_fkey";

ALTER TABLE IF EXISTS public."Tickets" DROP CONSTRAINT IF EXISTS "Tickets_booking_id_fkey";

ALTER TABLE IF EXISTS public."Tickets" DROP CONSTRAINT IF EXISTS "Tickets_seat_id_fkey";



DROP TABLE IF EXISTS public."Bookings";

CREATE TABLE IF NOT EXISTS public."Bookings"
(
    booking_id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id bigint NOT NULL,
    showtime_id bigint NOT NULL,
    booking_time timestamp without time zone NOT NULL,
    CONSTRAINT "PK_booking_id" PRIMARY KEY (booking_id)
);

COMMENT ON COLUMN public."Bookings".booking_id
    IS 'Уникальный идентификатор бронирования.';

COMMENT ON COLUMN public."Bookings".user_id
    IS 'Ссылка на пользователя.';

COMMENT ON COLUMN public."Bookings".showtime_id
    IS 'Ссылка на сеанс.';

COMMENT ON COLUMN public."Bookings".booking_time
    IS 'Время бронирования.';

DROP TABLE IF EXISTS public."Halls";

CREATE TABLE IF NOT EXISTS public."Halls"
(
    hall_id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    capacity integer NOT NULL,
    description text COLLATE pg_catalog."default",
    CONSTRAINT "PK_hall_id" PRIMARY KEY (hall_id)
);

COMMENT ON COLUMN public."Halls".hall_id
    IS 'Уникальный идентификатор зала.';

COMMENT ON COLUMN public."Halls".name
    IS 'Название зала.';

COMMENT ON COLUMN public."Halls".capacity
    IS 'Вместимость зала.';

COMMENT ON COLUMN public."Halls".description
    IS 'Вместимость зала.';

DROP TABLE IF EXISTS public."Movies";

CREATE TABLE IF NOT EXISTS public."Movies"
(
    movie_id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    title character varying(150) COLLATE pg_catalog."default" NOT NULL,
    genre character varying(50) COLLATE pg_catalog."default" NOT NULL,
    duration integer NOT NULL,
    rating character varying(10) NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_movie_id" PRIMARY KEY (movie_id)
);

COMMENT ON COLUMN public."Movies".movie_id
    IS 'Уникальный идентификатор фильма.';

COMMENT ON COLUMN public."Movies".title
    IS 'Название фильма.';

COMMENT ON COLUMN public."Movies".genre
    IS 'Жанр фильма.';

COMMENT ON COLUMN public."Movies".duration
    IS 'Длительность в минутах.';

COMMENT ON COLUMN public."Movies".rating
    IS 'Возрастной рейтинг (например, "18+").';

COMMENT ON COLUMN public."Movies".description
    IS 'Описание фильма.';

DROP TABLE IF EXISTS public."Seats";

CREATE TABLE IF NOT EXISTS public."Seats"
(
    seat_id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    hall_id bigserial NOT NULL,
    "row" integer NOT NULL,
    "number" integer NOT NULL,
    is_vip boolean NOT NULL,
    CONSTRAINT "PK_seat_id" PRIMARY KEY (seat_id)
);

COMMENT ON COLUMN public."Seats".seat_id
    IS 'Уникальный идентификатор места.';

COMMENT ON COLUMN public."Seats".hall_id
    IS 'Ссылка на зал.';

COMMENT ON COLUMN public."Seats"."row"
    IS 'Номер ряда.';

COMMENT ON COLUMN public."Seats"."number"
    IS 'Номер в ряду.';

COMMENT ON COLUMN public."Seats".is_vip
    IS 'Признак VIP-места.';

DROP TABLE IF EXISTS public."Showtimes";

CREATE TABLE IF NOT EXISTS public."Showtimes"
(
    showtime_id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    movie_id bigint NOT NULL,
    hall_id bigint NOT NULL,
    start_time timestamp without time zone NOT NULL,
    end_time timestamp without time zone NOT NULL,
    price numeric(10, 2) NOT NULL,
    CONSTRAINT "PK_showtime_id" PRIMARY KEY (showtime_id)
);

COMMENT ON COLUMN public."Showtimes".showtime_id
    IS 'Уникальный идентификатор сеанса.';

COMMENT ON COLUMN public."Showtimes".movie_id
    IS 'Ссылка на фильм.';

COMMENT ON COLUMN public."Showtimes".hall_id
    IS 'Ссылка на зал.';

COMMENT ON COLUMN public."Showtimes".price
    IS 'Цена билета.';

DROP TABLE IF EXISTS public."Tickets";

CREATE TABLE IF NOT EXISTS public."Tickets"
(
    ticket_id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    booking_id bigint NOT NULL,
    seat_id bigint NOT NULL,
    price numeric(10, 2),
    CONSTRAINT "PK_ticket_id" PRIMARY KEY (ticket_id)
);

COMMENT ON COLUMN public."Tickets".ticket_id
    IS 'Уникальный идентификатор билета.';

COMMENT ON COLUMN public."Tickets".booking_id
    IS 'Ссылка на бронирование.';

COMMENT ON COLUMN public."Tickets".seat_id
    IS 'Ссылка на место.';

COMMENT ON COLUMN public."Tickets".price
    IS 'Цена билета (включая надбавки).';

DROP TABLE IF EXISTS public."Users";

CREATE TABLE IF NOT EXISTS public."Users"
(
    user_id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    phone character varying(15) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    role text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_user_id" PRIMARY KEY (user_id),
    CONSTRAINT "UQ_email" UNIQUE (email)
);

COMMENT ON COLUMN public."Users".name
    IS 'Имя пользователя.';

COMMENT ON COLUMN public."Users".email
    IS 'Адрес электронной почты, уникальный.';

COMMENT ON COLUMN public."Users".phone
    IS 'Телефонный номер.';

COMMENT ON COLUMN public."Users".password
    IS 'Пароль.';

COMMENT ON COLUMN public."Users".role
    IS 'Роль пользователя.';

ALTER TABLE IF EXISTS public."Bookings"
    ADD CONSTRAINT "Bookings_showtime_id_fkey" FOREIGN KEY (showtime_id)
    REFERENCES public."Showtimes" (showtime_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."Bookings"
    ADD CONSTRAINT "Bookings_user_id_fkey" FOREIGN KEY (user_id)
    REFERENCES public."Users" (user_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."Seats"
    ADD CONSTRAINT "Seats_hall_id_fkey" FOREIGN KEY (hall_id)
    REFERENCES public."Halls" (hall_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."Showtimes"
    ADD CONSTRAINT "Showtimes_hall_id_fkey" FOREIGN KEY (hall_id)
    REFERENCES public."Halls" (hall_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."Showtimes"
    ADD CONSTRAINT "Showtimes_movie_id_fkey" FOREIGN KEY (movie_id)
    REFERENCES public."Movies" (movie_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."Tickets"
    ADD CONSTRAINT "Tickets_booking_id_fkey" FOREIGN KEY (booking_id)
    REFERENCES public."Bookings" (booking_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."Tickets"
    ADD CONSTRAINT "Tickets_seat_id_fkey" FOREIGN KEY (seat_id)
    REFERENCES public."Seats" (seat_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;

END;